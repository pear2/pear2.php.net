<?xml version="1.0" encoding="UTF-8"?>
<r xmlns="http://pear.php.net/dtd/rest.release2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://pear.php.net/dtd/rest.release2 http://pear.php.net/dtd/rest.release2.xsd">
 <p xlink:href="rest/p/pear2_net_routeros">PEAR2_Net_RouterOS</p>
 <c>pear2.php.net</c>
 <v>1.0.0b4</v>
 <a>1.0.0</a>
 <mp>5.3.0</mp>
 <st>beta</st>
 <l>LGPL License 2.1</l>
 <m>boen_robot</m>
 <s>RouterOS API client implementation.
</s>
 <d>RouterOS is the flag product of the company MikroTik and is a powerful router software. One of its many abilities is to allow control over it via an API. This package provides a client for that API, in turn allowing you to use PHP to control RouterOS hosts.</d>
 <da>2013-08-15 18:23:02</da>
 <n>Brand new way of manipulating data, encryption, and listen...

* A new Util class that abstracts away tons of fancy features, including:
  - CRUD operations
  - Support of targeting and finding entries by numbers, just like from terminal
  - Executing scripts (with the ability to pass typed parameters ala SQL prepared statements)
  - Putting and getting files out of RouterOS
  - Helper methods for converting back and forth between PHP and RouterOS values.
* Support for encrypted connections, both with and without a certificate. Note that due to known issues with PHP itself, encrypted connections may be unstable (as in &quot;sometimes disconnect suddenly&quot; or &quot;sometimes hang when you use Client::sendSync() and/or Client::completeRequest() and/or Client::loop() without a timeout&quot;).
* Client::loop() and Client::completeRequest() no longer fail if there's no reply within &quot;default_socket_timeout&quot; seconds. This means you can now use the &quot;listen&quot; command without also setting up something else to keep the connection busy.
* Client::loop() now accepts timeouts modeled after stream_select()'s, as opposed to a single float value. As before, the default is &quot;no time limit&quot;, but is now specified with NULL instead of 0. Analogous arguments have been added to Response's constructor.
* When receiving, the release lock is released when ANY exception is thrown. Previously, this would be so only in case of SocketException.
* Chnaged the PHAR stub to not fail when reading the hash fails.
* Exceptions now use constants to hold each code.
* Doc and CS fixes, and unit test reorganization.</n>
 <f>536942</f>
 <g>http://pear2.php.net/get/PEAR2_Net_RouterOS-1.0.0b4</g>
 <x xlink:href="package.1.0.0b4.xml"/>
</r>
